{"version":3,"sources":["../src/app.js"],"names":["cors","require","app","use","express","static","__dirname","set","pkg","path","join","urlencoded","extended","json","get","req","res","render","text","authRoutes","usersRoutes","codesRoutes","visitorsRoutes","coresRoutes","rolesRoutes","codeEventsRoutes","divisionsRoutes","housing_unitRoutes","pwdRSTRoutes","twilioRoutes","infoRoutes"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAzBA;AAGA;AAQA;AAiBA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AACA,iC,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,MAAR,CAAe,QAAf,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAeC,iBAAQC,MAAR,CAAeC,SAAS,GAAG,aAA3B,CAAf;AACAJ,GAAG,CAACC,GAAJ,CAAQ,KAAR,EAAcC,iBAAQC,MAAR,CAAeC,SAAS,GAAG,YAA3B,CAAd;AACAJ,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAeC,iBAAQC,MAAR,CAAeC,SAAS,GAAG,aAA3B,CAAf,E,CAEA;AACA;;AACAJ,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAiBD,SAAS,GAAG,QAA7B;AACAJ,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAsB,KAAtB,E,CACA;AAEA;;AACAL,GAAG,CAACK,GAAJ,CAAQ,KAAR,EAAcC,gBAAd,E,CAEA;AAEA;AACA;;AACAN,GAAG,CAACC,GAAJ,CAAQC,iBAAQC,MAAR,CAAeI,cAAKC,IAAL,CAAUJ,SAAV,EAAqB,SAArB,CAAf,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQC,iBAAQO,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAnB,CAAR;AACAV,GAAG,CAACC,GAAJ,CAAQH,IAAI,EAAZ;AACAE,GAAG,CAACC,GAAJ,CAAQC,iBAAQS,IAAR,EAAR;AACAX,GAAG,CAACC,GAAJ,CAAQ,qBAAO,KAAP,CAAR,E,CAEA;AAEA;;AACAD,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAY,CAACC,GAAD,EAAKC,GAAL,KAAY;AACpB;AACAA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAmB;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAnB;AACH,CAHD;AAKAhB,GAAG,CAACY,GAAJ,CAAQ,cAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,QAAX;AACH,CAFD;AAIAf,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAoBgB,aAApB;AACAjB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAqBiB,cAArB;AACAlB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAqBkB,cAArB;AACAnB,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAwBmB,iBAAxB;AACApB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAqBoB,cAArB;AACArB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAqBqB,cAArB;AACAtB,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAAyBsB,mBAAzB;AACAvB,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAAyBuB,kBAAzB;AACAxB,GAAG,CAACC,GAAJ,CAAQ,mBAAR,EAA4BwB,qBAA5B;AACAzB,GAAG,CAACC,GAAJ,CAAQ,kBAAR,EAA2ByB,eAA3B;AACA1B,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAsB0B,eAAtB,E,CACA;;AACA3B,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB2B,aAArB;eAEe5B,G","sourcesContent":["//--- this file is to configure express \r\nimport express from 'express';\r\nimport morgan from 'morgan';\r\n// import multer from \"multer\";\r\nimport pkg from '../package.json';\r\nimport \"./database\";\r\nimport {createRoles} from './libs/initialSetup';\r\nimport path from 'path';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\n\r\n//-- router imports  -----\r\nimport codesRoutes from './routes/codes.routes';\r\nimport authRoutes from './routes/auth.routes';\r\nimport usersRoutes from \"./routes/users.routes\";\r\nimport visitorsRoutes from \"./routes/visitors.routes\";\r\nimport coresRoutes from './routes/cores.routes';\r\nimport rolesRoutes from './routes/roles.routes';\r\nimport alertsRoutes from \"./routes/alerts.routes\";\r\nimport codeEventsRoutes from \"./routes/codeEvents.routes\";\r\nimport divisionsRoutes  from \"./routes/divisions.routes\";\r\nimport pwdRSTRoutes from \"./routes/pwdRST.routes\";\r\nimport twilioRoutes from \"./routes/twilio.routes\";\r\nimport housing_unitRoutes from \"./routes/housing_unit.routes\";\r\nimport pwdRST from './models/pwdRST';\r\nimport infoRoutes  from \"./routes/info.routes\";\r\n\r\n\r\nconst cors = require(\"cors\");\r\n\r\nconst app = express();\r\ncreateRoles();\r\n\r\n//  --- static files\r\napp.use(express.static('public'));\r\napp.use('/css',express.static(__dirname + '/public/css'));\r\napp.use('/js',express.static(__dirname + '/public/js'));\r\napp.use('/img',express.static(__dirname + '/public/img'));\r\n\r\n//#region --- Settings  -----------------------\r\n// --- Set views  ----\r\napp.set('views', __dirname + '/views');\r\napp.set('view engine','ejs');\r\n// app.engine('ejs', require('ejs').__express);\r\n\r\n//-- package json taken\r\napp.set('pkg',pkg);\r\n\r\n// #endregion  Settings  ------------------------\r\n\r\n//#region  -- middleware  -----------------------\r\n// Parse URL-encoded bodies when sent by HTML forms\r\napp.use(express.static(path.join(__dirname, \"/public\")));\r\napp.use(express.urlencoded({extended:true}));\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(morgan('dev'));\r\n\r\n// #endregion --------------------------------------\r\n\r\n// ---- routes ----\r\napp.get('/',(req,res) =>{\r\n    // res.sendFile(join(__dirname + '/views/index.html'));\r\n    res.render('index',{text: 'This is EJS'});\r\n});\r\n\r\napp.get('/pwdResetReq',(req, res) => {\r\n    res.render('pwdRST');\r\n});\r\n\r\napp.use('/api/auth',authRoutes);\r\napp.use('/api/users',usersRoutes);\r\napp.use('/api/codes',codesRoutes);\r\napp.use('/api/visitors',visitorsRoutes);\r\napp.use('/api/cores',coresRoutes);\r\napp.use('/api/roles',rolesRoutes);\r\napp.use('/api/codeEvent',codeEventsRoutes);\r\napp.use('/api/divisions',divisionsRoutes);\r\napp.use('/api/housing_unit',housing_unitRoutes);\r\napp.use('/api/pwdResetReq',pwdRSTRoutes);\r\napp.use('/api/twilio',twilioRoutes);\r\n// app.use('/api/alerts',alertsRoutes)\r\napp.use('/api/info', infoRoutes);\r\n\r\nexport default app;\r\n"],"file":"app.js"}