{"version":3,"sources":["../../src/middleware/verifySignup.js"],"names":["checkDuplicateUsernameEmail","req","res","next","user","Users","findOne","username","body","status","json","message","email","checkRolesExists","roles","i","length","ROLES","includes"],"mappings":";;;;;;;AAAA;;AACA;;;;AADuC;AAGhC,MAAMA,2BAA2B,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACjE,QAAMC,IAAI,GAAG,MAAMC,eAAMC,OAAN,CAAc;AAACC,IAAAA,QAAQ,EAAGN,GAAG,CAACO,IAAJ,CAASD;AAArB,GAAd,CAAnB;AAEA,MAAIH,IAAJ,EAAU,OAAOF,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,IAAAA,OAAO,EAAC;AAAT,GAArB,CAAP;AAEV,QAAMC,KAAK,GAAG,MAAMP,eAAMC,OAAN,CAAc;AAACM,IAAAA,KAAK,EAAEX,GAAG,CAACO,IAAJ,CAASI;AAAjB,GAAd,CAApB;AACA,MAAGA,KAAH,EAAU,OAAOV,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,IAAAA,OAAO,EAAG;AAAX,GAArB,CAAP;AAEVR,EAAAA,IAAI;AAEP,CAVM;;;;AAYA,MAAMU,gBAAgB,GAAG,CAACZ,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAiB;AAC7C,MAAGF,GAAG,CAACO,IAAJ,CAASM,KAAZ,EAAkB;AACd,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACd,GAAG,CAACO,IAAJ,CAASM,KAAT,CAAeE,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAG,CAACE,aAAMC,QAAN,CAAejB,GAAG,CAACO,IAAJ,CAASM,KAAT,CAAeC,CAAf,CAAf,CAAJ,EAAsC;AAClC,eAAOb,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,UAAAA,OAAO,EAAG,QAAOV,GAAG,CAACO,IAAJ,CAASM,KAAT,CAAeC,CAAf,CAAkB;AADX,SAArB,CAAP;AAGH;AACJ;AACJ;;AACDZ,EAAAA,IAAI;AACP,CAXM","sourcesContent":["import {ROLES} from \"../models/Roles\"; //- when have time get this roles from mongo\r\nimport Users from \"../models/Users\";\r\n\r\nexport const checkDuplicateUsernameEmail = async (req, res, next) => {\r\n    const user = await Users.findOne({username : req.body.username});\r\n\r\n    if (user) return res.status(400).json({message:'Username already exists'})\r\n\r\n    const email = await Users.findOne({email: req.body.email});\r\n    if(email) return res.status(400).json({message : 'Email already exists'})\r\n\r\n    next();\r\n\r\n}\r\n\r\nexport const checkRolesExists = (req,res,next) =>{\r\n    if(req.body.roles){\r\n        for(let i=0; i<req.body.roles.length; i++){\r\n            if(!ROLES.includes(req.body.roles[i])){\r\n                return res.status(400).json({\r\n                    message: `Role ${req.body.roles[i]} does not exists`\r\n                })\r\n            }\r\n        }\r\n    }\r\n    next();\r\n}"],"file":"verifySignup.js"}