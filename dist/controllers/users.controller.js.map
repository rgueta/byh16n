{"version":3,"sources":["../../src/controllers/users.controller.js"],"names":["createUser","req","res","console","log","body","name","email","username","house","uuid","sim","gender","avatar","pwd","core","roles","map","Types","ObjectId","foundUser","Users","findOne","status","send","JSON","stringify","err","message","RegisterUser","getUsers","users","find","json","getUserById","user","findById","params","userId","getUserByCore","coreId","result","updateUserById","updatedUser","Codes","findByIdAndUpdate","new","updatedCode","deleteUserById","deletedUser","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Users  from \"../models/Users\";\r\nimport {Types} from 'mongoose';\r\nimport { response } from \"express\";\r\n\r\nexport const createUser = async (req,res) =>{\r\n    console.log('Create rUser -->', req.body);\r\n\r\n    try{\r\n        const  {name,email,username,house,uuid,sim,gender,avatar,pwd,core} = await req.body;\r\n        const roles = req.body.roles.map(Types.ObjectId);\r\n\r\n        const foundUser = await Users.findOne({email : req.body.email})\r\n        if(!foundUser){\r\n            // const newUser = new Users({name,email,username,house,uuid,sim,gender,avatar,pwd,core,roles});\r\n\r\n            // const userSaved = await newUser.save();\r\n\r\n            res.status(200).send({'status' : 200,'msg' : 'User saved'});\r\n        }else{\r\n            console.log('User already exists -> ' + JSON.stringify(foundUser));\r\n            res.status(200).send({'status' : 201, 'msg' : 'User already exists'});\r\n        }\r\n    }catch(err){\r\n        return res.status(200).send({'status' : 401, 'msg':err.message});\r\n    }\r\n}\r\n\r\nexport const RegisterUser = async (req, res) => {\r\n    console.log('RegisterUser -->', req.body);\r\n}\r\n\r\nexport const getUsers = async (req, res) =>{\r\n    const users = await Users.find();\r\n    res.json(users)\r\n}\r\n\r\nexport const getUserById = async (req,res) => {\r\n    const user = await Users.findById(req.params.userId);\r\n    console.log(req.params.userId);\r\n    res.status(200).json(user);\r\n}\r\n\r\nexport const getUserByCore = async(req, res) =>{\r\n    Users.find({'core' : Types.ObjectId(req.params.coreId)}, (err,result) => {\r\n        if(err){\r\n            console.log(err);\r\n            res.status(500).json(err);\r\n        }else{\r\n            res.status(200).json(result);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport const updateUserById = async (req,res) => {\r\n    const updatedUser = await Codes.findByIdAndUpdate(req.params.userId,req.body,{new:true});\r\n    res.status(200).json(updatedCode);    \r\n}\r\n\r\nexport const deleteUserById = async (req,res) => {\r\n    const deletedUser = await Codes.findByIdAndDelete(req.params.userId);\r\n    res.status(204).json(deletedUser)\r\n}"],"file":"users.controller.js"}