{"version":3,"sources":["../../src/controllers/visitors.controller.js"],"names":["createVisitor","req","res","console","log","JSON","stringify","body","userId","name","email","username","pwd","address","sim","gender","avatar","newVisitor","Visitors","visitorSaved","save","status","json","err","getVisitors","visitors","find","getVisitorsByUser","params","aggregate","$match","Types","ObjectId","$project","_id","getVisitorById","visitor","findById","visitorId","updateVisitorById","updatedVisitor","findByIdAndUpdate","new","updateSimpleVisitorById","result","deleteVisitorById","deletedVisitor","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Visitors from \"../models/Visitors\";\r\nimport { Types } from \"mongoose\";\r\n\r\nexport const createVisitor = async (req,res) =>{\r\n    console.log('createVisitor --> ' + JSON.stringify(req.body))\r\n    try{\r\n        const  {userId, name,email,username,pwd,address,sim,gender,avatar} = req.body;\r\n        \r\n        const newVisitor = new Visitors({userId, name,email,username,pwd,address,sim,gender,avatar});\r\n        console.log('newVisitor -> ',newVisitor);\r\n        return;\r\n\r\n        const visitorSaved = await newVisitor.save();\r\n\r\n        // console.log('visitors --> ' + JSON.stringify(req.body));\r\n    \r\n        res.status(201).json({'visitorSaved':visitorSaved});\r\n        // res.json('creating visistor')\r\n    }catch(err){\r\n        console.log(err);\r\n        res.status(404).json(err)\r\n    }\r\n}\r\n\r\nexport const getVisitors = async (req, res) =>{\r\n    const visitors = await Visitors.find();\r\n    res.json(visitors)\r\n}\r\n\r\nexport const getVisitorsByUser = async (req,res) => {\r\n    console.log('get Visitors for user: ' + req.params.userId);\r\n    const visitors = await Visitors.aggregate([\r\n        {\r\n            $match : {\r\n                'userId' : {'$eq' : Types.ObjectId(req.params.userId)} \r\n            }\r\n        },\r\n        {\r\n            $project : {\r\n                _id : 1,\r\n                name : 1,\r\n                email : 1,\r\n                username : 1,\r\n                sim : 1,\r\n                avatar : 1\r\n                \r\n                \r\n            }\r\n        }\r\n    ])\r\n    console.log('Visitors from userId' + req.params.userId);\r\n    res.status(200).json(visitors);\r\n}\r\n\r\nexport const getVisitorById = async (req,res) => {\r\n    const visitor = await Visitors.findById(req.params.visitorId);\r\n    console.log(req.params.visitorId);\r\n    res.status(200).json(visitor);\r\n}\r\n\r\n\r\nexport const updateVisitorById = async (req,res) => {\r\n    const updatedVisitor = await Visitors.findByIdAndUpdate(req.params.visitorId,req.body,{new:true});\r\n    res.status(200).json(updatedVisitor);    \r\n}\r\n\r\nexport const updateSimpleVisitorById = async (req,res) => {\r\n    console.log('updateSimpleVisitorById params -->', req.body) \r\n    await Visitors.findByIdAndUpdate(req.params.visitorId,req.body,{new:false},(err,result) =>{\r\n        if(err) return res.status(401).json({'msg':'can not update visitor ' + err})\r\n        console.log('updated Ok ' + result)\r\n    });\r\n    // if(!updatedVisitor) return res.status(401).json({'msg':'can not update visitor '}); \r\n    res.status(200).json(updatedVisitor);    \r\n    // res.status(200).json({'msg':'testing'});\r\n}\r\n\r\n\r\nexport const deleteVisitorById = async (req,res) => {\r\n    const deletedVisitor = await Visitors.findByIdAndDelete(req.params.visitorId);\r\n    res.status(204).json(deletedVisitor)\r\n}"],"file":"visitors.controller.js"}