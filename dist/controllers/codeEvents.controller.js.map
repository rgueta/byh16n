{"version":3,"sources":["../../src/controllers/codeEvents.controller.js"],"names":["createCode_event","req","res","codeId","Types","ObjectId","params","picId","CoreSim","newCode_event","code_events","eventSaved","save","status","json","getCode_events","codeEvents","aggregate","$lookup","$unwind","$match","coreSim","$sort","createdAt","$project","code","casa","visitorname","$dateToString","format","date","timezone","getCode_eventsByDate","console","log","Date","start","end","userId","$gt","$lt"],"mappings":"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","sourcesContent":["import code_events  from \"../models/code_events\";\r\nimport { Schema, Types } from \"mongoose\";\r\nimport { RegisterUser } from \"./users.controller\";\r\n\r\nexport const createCode_event = async (req,res) => {\r\n    const codeId = Types.ObjectId(req.params.codeId);\r\n    const picId = req.params.picId;\r\n    const CoreSim = req.params.CoreSim;\r\n\r\n    const newCode_event = new code_events({codeId,CoreSim,picId});\r\n    const eventSaved = await newCode_event.save();\r\n\r\n    res.status(201).json(eventSaved);\r\n}\r\n\r\nexport const getCode_events = async (req,res) => {\r\n    if(req.params.CoreSim != null){\r\n        const CoreSim = req.params.CoreSim;\r\n        const codeEvents = await code_events.aggregate([\r\n            {\r\n                $lookup:{\r\n                        'from' :  'codes',\r\n                        'localField' : 'codeId',\r\n                        'foreignField' : '_id',\r\n                        'as' : 'code_events_code'\r\n                    }\r\n            },\r\n            {$unwind : '$code_events_code'},\r\n                {\r\n                $lookup:{\r\n                        'from' :  'visitors',\r\n                        'localField' : 'code_events_code.visitorId',\r\n                        'foreignField' : '_id',\r\n                        'as' : 'code_visitors'\r\n                    }\r\n                },\r\n            {$unwind : '$code_visitors'},\r\n            {\r\n                $lookup : {\r\n                        'from' :  'users',\r\n                        'localField' : 'code_events_code.source.user',\r\n                        'foreignField' : '_id',\r\n                        'as' : 'codes_users'\r\n                    }   \r\n                },\r\n            {$unwind : '$codes_users'},\r\n            {\r\n                $match : {\r\n                        coreSim : req.params.CoreSim\r\n                    }\r\n                },\r\n            {$sort : { createdAt : -1 }},\r\n            {\r\n                $project : {\r\n                        codeId : 1,\r\n                        CoreSim : 1,\r\n                        code : '$code_events_code.code',\r\n                        casa : '$codes_users.house',\r\n                        visitorname : '$code_visitors.name',\r\n                        createdAt : { \r\n                            $dateToString: { \r\n                              format: '%Y/%m/%d %H:%M:%S', \r\n                              date: '$createdAt', \r\n                              timezone: 'America/Los_Angeles' \r\n                            } \r\n                          }\r\n                    }\r\n            }\r\n        ]);\r\n\r\n        res.status(201).json(codeEvents);\r\n    }else{\r\n        res.status(401).json({'msg':'core_sim parameter not received'})\r\n    }\r\n}\r\nexport const getCode_eventsByDate = async (req,res) => {\r\n    console.log('getCode_eventsByDate --> start ' , new Date(req.params.start));\r\n    \r\n    if(req.params.CoreSim != null && req.params.start != null && req.params.end != null){\r\n        const CoreSim = req.params.CoreSim;\r\n        const date = req.params.date;\r\n\r\n        const codeEvents = await code_events.aggregate([\r\n            {\r\n                $lookup:{\r\n                        'from' :  'codes',\r\n                        'localField' : 'codeId',\r\n                        'foreignField' : '_id',\r\n                        'as' : 'code_events_code'\r\n                    }\r\n            },\r\n            {$unwind : '$code_events_code'},\r\n                {\r\n                $lookup:{\r\n                        'from' :  'visitors',\r\n                        'localField' : 'code_events_code.visitorId',\r\n                        'foreignField' : '_id',\r\n                        'as' : 'code_visitors'\r\n                    }\r\n                },\r\n            {$unwind : '$code_visitors'},\r\n            {\r\n                $lookup : {\r\n                        'from' :  'users',\r\n                        'localField' : 'code_events_code.source.user',\r\n                        'foreignField' : '_id',\r\n                        'as' : 'codes_users'\r\n                    }   \r\n                },\r\n            {$unwind : '$codes_users'},\r\n            {\r\n                $match : {\r\n                        'code_events_code.source.user'  : Types.ObjectId(req.params.userId),\r\n                        createdAt :  {\r\n                            $gt : new Date(req.params.start),\r\n                            $lt : new Date(req.params.end)\r\n                        }\r\n                    }\r\n                },\r\n            {$sort : { createdAt : -1 }},\r\n            {\r\n                $project : {\r\n                        codeId : 1,\r\n                        coreSim : 1,\r\n                        code : '$code_events_code.code',\r\n                        casa : '$codes_users.house',\r\n                        visitorname : '$code_visitors.name',\r\n                        createdAt : { \r\n                            $dateToString: { \r\n                                format: '%Y/%m/%d %H:%M:%S', \r\n                                date: '$createdAt', \r\n                                timezone: 'America/Los_Angeles' \r\n                            } \r\n                            }\r\n                    }\r\n            }\r\n    ]);\r\n    if(codeEvents){\r\n        res.status(201).json(codeEvents);\r\n    }else{\r\n        res.status(204).json({'msg':'No data found'})\r\n    }\r\n    }\r\n}\r\n"],"file":"codeEvents.controller.js"}